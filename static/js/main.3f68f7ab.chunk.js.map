{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","class","onClick","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f68f7ab.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm (props){\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 1000),\r\n            text: input\r\n        })\r\n\r\n        setInput('');\r\n    }\r\n\r\n    return(\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n            <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Update your item\" \r\n                    value={input} \r\n                    name=\"text\" \r\n                    className=\"todo-input edit\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button edit\">Update</button>\r\n            </>\r\n            ): \r\n            (\r\n            <>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add a todo\" \r\n                    value={input} \r\n                    name=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">Add todo</button>\r\n            </>\r\n            )}\r\n                   </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine, RiCheckboxBlankLine, RiCheckboxLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}){\r\n\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: \"\"\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: \"\"\r\n        })\r\n    }\r\n\r\n    if(edit.id){\r\n        return<TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div \r\n            className={todo.isComplete ? \"todo-row complete\": \"todo-row\"} \r\n            key={index}\r\n        >\r\n            {todo.isComplete ? (\r\n                <RiCheckboxLine class=\"checkbox-icon\" key={todo.id} onClick={() => completeTodo(todo.id)}/>\r\n            ) : (\r\n                <RiCheckboxBlankLine class=\"checkbox-icon\" key={todo.id} onClick={() => completeTodo(todo.id)}/>\r\n            )}\r\n            \r\n            <div className=\"todo-text\">\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine \r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className=\"delete-icon\"\r\n                />\r\n                <TiEdit\r\n                    onClick={() => setEdit({id: todo.id, value: todo.text})}\r\n                    className=\"edit-icon\"\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo;","import React, {useState} from 'react'\r\nimport TodoForm from \"./TodoForm\"\r\nimport Todo from \"./Todo\"\r\n\r\nfunction TodoList(){\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^s*$/.test(todo.text)){\r\n            return\r\n        }\r\n\r\n        //spread operator\r\n        const newTodos = [todo, ...todos]\r\n        \r\n        setTodos(newTodos)\r\n        console.log(todo, ...todos);\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^s*$/.test(newValue.text)){\r\n            return;\r\n        } \r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>What's the Plan for Today?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo \r\n                todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import TodoList from \"./components/TodoList\"\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}